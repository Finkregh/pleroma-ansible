---
# tasks file for pandjeed.pleroma
  - name: Load the appropriate variables
    include_vars:
      file: "{{ ansible_distribution }}.yml"

  - name: Install the absolutely needed dependancies for Ansible
    shell: apt install python-apt python3-apt -y
   
  - name: Install Erlang
    apt:
      deb: https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb
      install_recommends: yes
   
  - name: Updates everything
    apt:
      name: "*"
      state: latest
      update_cache: yes
      
  - name: Install the required packages
    apt:
      name: "{{ item }}"
      state: present
    with_items: essential_packages  
  
  - name: Add this new hidden service
    blockinfile:
      path: /etc/tor/torrc
      state: present
      line: | 
        HiddenServiceDir /var/lib/tor/pleroma/
        HiddenServicePort 80 127.0.0.1:4000
   
  - name: Enable Tor
    systemd:
      name: tor
      enabled: yes
      state: started
  
  - name: Get the new onion address
    slurp:
      src: /var/lib/tor/pleroma/hostname
    register: onion_address
   
  - name: Apply the new Nginx configuration file
    template:
      src: pleroma_nginx.conf.j2
      dest: /etc/nginx/sites-available/pleroma.conf
   
  - name: Enable this new configuration
    copy:
      src: /etc/nginx/sites-available/pleroma.conf
      dest: /etc/nginx/sites-enabled/pleroma.conf
      
  - name: Restart NGINX
    systemd:
      name: nginx
      enabled: yes
      state: restarted
    
  - name: Creation a Pleroma user
    user:
      name: pleroma
      password: "{{ pleroma_passwd }}"
      state: present
      shell: /bin/bash
      system: no
      createhome: yes
      home: /home/pleroma
  
  - name: Clone the repository
    git:
      repo: https://git.pleroma.social/pleroma/pleroma
      dest: /home/pleroma
  
  - name: Set the correct file ownership and group
    file:
      path: /home/pleroma/pleroma
      owner: pleroma
      group: pleroma
      recurse: yes
    notify: Get dependancies
 
  - name: Generate the configuration
    expect:
      chdir: /home/pleroma/pleroma
      command: mix pleroma.instance gen
      responses:
        rebar3: yes
    become: yes
    become_user: pleroma
  
  - name: Copy the generated configuration file as a new production file
    copy:
      src: /home/pleroma/config/generated_config.exs
      dest: /home/pleroma/config/prod.secrets.exs
      owner: pleroma
      group: pleroma
      remote_src: yes
  
  - name: Adapt the configuration file for Tor
    lineinfile:
      path: /home/pleroma/config/prod.secrets.exs
      line: "config :pleroma, :http, proxy_url: {:socks5, :localhost, 9050}"
    
  - lineinfile:
      path: /home/pleroma/config/prod.secrets.exs
      regexp: "   url: [host: \"{{ onion_address }}\", scheme: \"https\", port: 443],"
      line: "   url: [host: \"{{ onionaddress }}\", scheme: \"http\", port: 80],"
    notify: Get dependancies
  
  - name: Create a database based on setup_db.psql
    postgresql_db:
      name: pleroma
      state: restore
      target: /home/pleroma/pleroma/config/setup_db.psql
    become: yes
    become_user: postgres
  
  - name: Run the database migration
    shell: MIX_ENV=prod mix ecto.migrate
    args:
      chdir: /home/pleroma/pleroma
    become: yes
    become_user: pleroma
      
  - name: Enable the Pleroma service
    systemd:
      daemon_reload: yes
      name: pleroma.service
      enabled: yes
      state: started
      
  
